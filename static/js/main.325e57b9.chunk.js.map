{"version":3,"sources":["Components/CardComp.js","Components/Cardflip.js","Components/Data.js","Components/SelectCurrency.js","Components/Convertor.js","Components/Dropdown.js","App.js","serviceWorker.js","index.js"],"names":["LLC","start","Math","floor","random","length","Transition","React","forwardRef","props","ref","react_default","a","createElement","Slide","Object","assign","direction","Cards","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","isFlipped","handleClick","bind","assertThisInitialized","e","preventDefault","setState","prevState","Grid","item","md","className","onClick","gambleWin","react_card_flip_default","flipDirection","key","Paper","style","Dialog","open","keepMounted","aria-labelledby","aria-describedby","TransitionComponent","DialogTitle","id","DialogContent","DialogContentText","Typography","DialogActions","Button","color","Component","App","Container","container","spacing","CardComp","data","currencies","code","sellRate","name","sign","SelectCurrency","_ref","onSelectCurrency","filteredCurrencies","filter","currency","NativeSelect","onChange","target","value","map","currencyA","currencyB","currencyAval","currencyBval","_this$state","newValueA","newValueB","_this2","_this$state2","Card","variant","component","FormControl","InputLabel","Components_SelectCurrency","concat","Input","type","step","pattern","onChangeHandler","SimpleMenu","_React$useState","useState","_React$useState2","slicedToArray","anchorEl","setAnchorEl","react_router_dom","backgroundColor","aria-controls","aria-haspopup","event","currentTarget","Menu","Boolean","onClose","to","MenuItem","react_router","path","Cardflip","exact","Components_Convertor","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.325e57b9.chunk.js","sourcesContent":["import React, {Component} from 'react';\nimport ReactCardFlip from 'react-card-flip';\nimport { Grid, Paper, Typography } from '@material-ui/core';\n\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Slide } from '@material-ui/core';\n\n// Randomly finds if you win or lose on card flip\nconst LLC = () => {\n  var start = [\"CONGRATULATIONS! Youâ€™ve won a prize!\", \"Sorry, you lost.\"];\n  var stat = start[Math.floor(Math.random() * start.length)];\n  return stat;\n}\n\n//transiton animation of dialog popup\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"up\" ref={ref} {...props} />;\n});\n\nclass Cards extends Component {\n\n  //flip state\n  constructor() {\n    super();\n      this.state = {\n      isFlipped: false\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n \n  // click for flip state\n  handleClick(e) {\n    e.preventDefault();\n    this.setState(prevState => ({ isFlipped: !prevState.isFlipped }));\n    }\n  \n\n  render() {\n    return (\n        <Grid item md={3}>\n          <div  className=\"\" onClick={this.gambleWin}>\n        <ReactCardFlip isFlipped={this.state.isFlipped} flipDirection=\"vertical\">\n        <front key=\"front\">\n        <Paper onClick={this.handleClick} className=\"cardbodyfront\" style={{ }}>\n          \n          </Paper>\n        </front>\n \n        <back key=\"back\">\n        <Paper onClick={this.handleClick} className=\"cardbodyback\">\n          </Paper>\n        </back>\n      </ReactCardFlip>\n        </div>\n\n        <Dialog open={this.state.isFlipped}\n        keepMounted\n        aria-labelledby=\"alert-dialog-slide-title\"\n        aria-describedby=\"alert-dialog-slide-description\"\n        TransitionComponent={Transition}>\n          <DialogTitle id=\"alert-dialog-slide-title\">{\"Hey There!\"}</DialogTitle>\n            <DialogContent>\n             <DialogContentText id=\"alert-dialog-slide-description\">\n                <Typography><LLC></LLC> <br></br>\n                Thank you for playing</Typography>\n              </DialogContentText>\n            </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClick} color=\"primary\">\n             Try Again\n             </Button>\n             <Button onClick={this.handleClick} color=\"secondary\">\n              Quit\n             </Button>\n          </DialogActions>\n        </Dialog>\n        </Grid>\n\n    );\n  }\n}\n\nexport default Cards;","import React, {Component} from 'react';\nimport { Grid, Container } from '@material-ui/core';\nimport CardComp from './CardComp';\n\nclass App extends Component {\n  render() {\n    return (\n      <Container>\n\n      <div className=\"\">\n      <Grid container spacing={12}>\n        <CardComp />\n        <CardComp />\n        <CardComp />\n      </Grid>\n      </div>\n\n      </Container>\n    );\n  }\n}\n\nexport default App;","// currencies and their country code, conversion figure, sign and name\n\nconst data = {\n    \"currencies\": [\n        {\n            \"code\": \"USD\",\n            \"sellRate\": 1,\n            \"name\": \"U.S. dollar\",\n            \"sign\": \"$\"\n        },\n        {\n            \"code\": \"ZAR\",\n            \"sellRate\": 15.33,\n            \"name\": \"South African Rand\",\n            \"sign\": \"R\"\n        },\n        {\n            \"code\": \"GBP\",\n            \"sellRate\": .92,\n            \"name\": \"Great British Pound\",\n            \"sign\": \"Â£\"\n        },\n        {\n            \"code\": \"EUR\",\n            \"sellRate\": .82,\n            \"name\": \"European Euro\",\n            \"sign\": \"â‚¬\"\n        }\n    ]\n}\n\nexport default data;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { NativeSelect } from '@material-ui/core';\n\nconst SelectCurrency = ({currencies, onSelectCurrency}) => {\n\n    const filteredCurrencies = currencies.filter(currency => currency.code !== 'AUD');\n\n    return <NativeSelect onChange={(e) => onSelectCurrency(e.target.value)}>\n        {\n            filteredCurrencies.map(currency => {\n                const {code, name} = currency;\n                return <option key={code} value={code}>{name}</option>\n            })\n        }\n    </NativeSelect>\n}\n\nSelectCurrency.propTypes = {\n    currencies: PropTypes.array.isRequired,\n    onSelectCurrency: PropTypes.func.isRequired\n};\n\nexport default SelectCurrency;","import React from 'react';\nimport data from './Data';\nimport SelectCurrency from './SelectCurrency';\nimport { Input, Card, FormControl, InputLabel, Typography } from '@material-ui/core';\n\nclass App extends React.Component {\n\n  constructor(props){\n    super(props);\n\n    // state of currencies in conversion\n    this.state = {\n      currencies: data.currencies,\n      currencyA: data.currencies[0],\n      currencyB: data.currencies[1],\n      currencyAval: data.currencies[0].sellRate,\n      currencyBval: data.currencies[1].sellRate\n    }\n\n    this.onSelectCurrency = this.onSelectCurrency.bind(this);\n\n  }\n\n  onSelectCurrency(code){\n    //selecting currency\n    const {currencies, currencyAval} = this.state;\n    const currency = currencies.filter(currency => currency.code === code);\n    this.setState({\n      currencyB: currency[0], // this is an array with one item\n      currencyBval: currencyAval * currency[0].sellRate\n    })\n  }\n\n  onChangeHandler(e, currency){\n\n    const { /*currencyA,*/ currencyB} = this.state;\n\n    if(currency === 'A'){\n      \n      const newValueA = e.target.value;\n      this.setState({\n        currencyAval: newValueA,\n        currencyBval: newValueA * currencyB.sellRate\n      })\n\n    } else if(currency === 'B'){\n      \n      const newValueB = e.target.value;\n      this.setState({\n        currencyAval: newValueB / currencyB.sellRate,\n        currencyBval: newValueB\n      })\n\n    }\n\n  }\n\n  render(){\n    const {currencies, currencyA, currencyB, currencyAval, currencyBval} = this.state;\n    return (\n        <Card className=\"convertorCard\">\n      <div >\n       \n        <header>\n        <Typography variant=\"h4\" color=\"textPrimary\" component=\"p\">\n          Currency Convertor\n        </Typography>\n        </header>\n        <div>\n          <div >\n            <div>\n              <p>\n                {\n                  //Selecting currency\n                }\n                <FormControl variant=\"outlined\"  >\n                <InputLabel >\n          Select Currency\n        </InputLabel>\n                <SelectCurrency currencies={currencies} onSelectCurrency={this.onSelectCurrency} />\n                </FormControl>\n              </p>\n            </div>\n          </div>\n          \n          <div>\n            <div >\n              <h3 className={`currency-flag ${currencyA.code}`}>{currencyA.name}</h3>\n              {\n                  //Currency input A\n              }\n              <div>\n                <span>{currencyA.sign}</span>\n                <Input type=\"number\" value={currencyAval} aria-describedby=\"basic-addon2\" step=\"1\" pattern=\"\\d\\.\\d{2}\" onChange={(e) => {\n                  this.onChangeHandler(e, 'A');\n                }} />\n                <span  id=\"basic-addon2\">{currencyA.code}</span>\n              </div>\n\n            </div>\n            <div >\n              <h3 className={`currency-flag ${currencyB.code}`}>{currencyB.name}</h3>\n              {\n                  //Currency input B\n              }\n              <div >\n                <span >{currencyB.sign}</span>\n                <Input type=\"number\" value={currencyBval} aria-describedby=\"basic-addon3\" step=\"1\" pattern=\"\\d\\.\\d{2}\"  onChange={(e) => {\n                  this.onChangeHandler(e, 'B');\n                }}/>\n                <span  id=\"basic-addon3\">{currencyB.code}</span>\n              </div>\n\n            </div>\n          </div>\n          <div >\n            <div >\n              {\n                  //Update to currently selected currency\n              }\n              <p>\n                Exchange Rate {`${currencyA.sign} ${currencyA.sellRate} ${currencyA.code}`} = {`${currencyB.sign} ${currencyB.sellRate} ${currencyB.code}`}\n              </p>\n            </div>\n          </div>\n        </div>\n        \n      </div>\n      </Card>\n    )\n  }\n}\n\nexport default App;","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport { Menu, MenuItem, Paper } from '@material-ui/core/';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport Cardflip from './Cardflip';\nimport Convert from './Convertor';\n\nexport default function SimpleMenu() {\n  const [anchorEl, setAnchorEl] = React.useState(null);\n\n  // open click handler\n  const handleClick = event => {\n    setAnchorEl(event.currentTarget);\n  };\n\n  //handle close event\n  const handleClose = () => {\n    setAnchorEl(null);\n  };\n\n  // Null feild to leave space empty again\n  function Done() {\n    return (\n      <div>\n      </div>\n    );\n  }\n\n  //calls cardflip comp\n  function Cards() {\n    return (\n      <div className=\"cards1\">\n        <Cardflip />\n      </div>\n    );\n  }\n  \n  //calls conversion comp\n  function Convertor() {\n    return (\n      <div className=\"cards2\">\n        <Convert />\n      </div>\n    );\n  }\n\n  return (\n    \n      <Router>\n        <div className=\"child\">\n    <Paper className=\"frame elevation5\">\n        <h1>Hello</h1>\n        <p>Welcome to my app, to begin:</p>\n      <Button style={{backgroundColor: '#d7e6fa'}} aria-controls=\"simple-menu\" aria-haspopup=\"true\" onClick={handleClick}>\n        Click Here\n      </Button>\n\n      <Menu\n        id=\"simple-menu\"\n        anchorEl={anchorEl}\n        keepMounted\n        open={Boolean(anchorEl)}\n        onClose={handleClose}>\n\n          <Link className=\"link\" to=\"/cards\"><MenuItem> Win! </MenuItem></Link>\n          <Link className=\"link\" to=\"/convertor\"><MenuItem>Currency Convertor</MenuItem></Link>\n          <Link className=\"link\"  to=\"/done\"><MenuItem> Quit </MenuItem></Link>\n\n\n\n      </Menu>\n      </Paper>\n      </div>\n\n        <Route path=\"/cards\" component={Cards} />\n        <Route exact path=\"/convertor\" component={Convertor} />\n        <Route exact path=\"/done\" component={Done} />\n\n      </Router>\n    \n  );\n}","import React, {Component} from 'react';\nimport './App.css';\n\nimport Dropdown from './Components/Dropdown';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n      <Dropdown />\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}